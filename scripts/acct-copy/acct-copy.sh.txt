#!/bin/bash
# Aravind Datta - 5/18/2017
# This script will copy an account from one environment to another
# However, script needs to be available at the source env & destination env
# copy functionality creates data files in source env
# load functionality loads and updates data into destination tables/env
# script assumes .cronprofile has variables like client_id, bo_id, firm_id, sub_no
# usage: ./acct-copy.sh [copy|load] [acct-file|acct_no] [sec_no]
# version 1.4

. .cronprofile

# usage
if [[ -z $1 ]]; then
   echo "usage: ./acct-copy.sh [copy|load] [acct-file|acct_no] [sec_no]"
   exit 1;
fi

main(){
   if [[ -z $2 ]]; then
      echo "usage: ./acct-copy.sh [copy|load] [acct-file|acct_no] [sec_no]"
      exit 1;
   fi

   if [[ -f $2 ]]; then
      #echo "$2 is a file.."
      exec<$2
      if [[ "$1" == "copy" ]]; then
         while read line
         do
            VAR=`echo $line | cut -d';' -f1`
            echo "copying.. $VAR"
            copy_acct $VAR
            archive_data $VAR
         done
      elif [[ "$1" == "load" ]]; then
         while read line
         do
            VAR=`echo $line | cut -d';' -f1`
            echo "loading.. $VAR"
            load_acct $VAR
            archive_data $VAR
         done
      else
         echo "usage: ./acct-copy.sh [copy|load] [acct-file|acct_no] [sec_no]"
         exit 1;
      fi
   else
      #echo "$2 is not a file.."
      if [[ "$1" == "copy" ]]; then
         if [[ -z $3 ]]; then
            echo "copying.. $2"
            copy_acct $2
         else
            echo "copying acct/sec.. $2 $3"
            copy_acct_sec $2 $3
         fi
         archive_data $2
      elif [[ "$1" == "load" ]]; then
         echo "loading.. $2"
         load_acct $2
         archive_data $2
      else
         echo "usage: ./acct-copy.sh [copy|load] [acct-file|acct_no] [sec_no]"
         exit 1;
      fi
   fi
}

copy_acct_sec(){
# export tables
sqlplus -s $DB_USER/$DB_PASS@$ORACLE_SID<<!
   set feedback off
   set verify off
   set define off
   set pagesize 0
   set heading off
   set serverout on
   set linesize 700

   spool $1-$2-am.txt
   SELECT COL1||'|'||COL2||'|'||COL3||'|' from tab1 where col2='$1';
   spool off

   spool $1-$2-seed.txt
   # *** protected query *** 
   spool off

   spool $1-$2-trd.txt
   # *** protected query *** 
   spool off

   spool $1-$2-rad.txt
   # *** protected query *** 
   spool off

   spool $1-$2-cli.txt
   # *** protected query *** 
   spool off

   spool $1-$2-fim.txt
   # *** protected query *** 
   spool off

   spool $1-$2-fid.txt
   # *** protected query *** 
   spool off

   spool $1-$2-cas.txt
   # *** protected query *** 
   spool off

   spool $1-$2-cpa.txt
   # *** protected query *** 

   spool $1-$2-cap.txt
   # *** protected query *** 

   spool $1-$2-cab.txt
   # *** protected query *** 

   spool $1-$2-cat.txt
   # *** protected query *** 

   spool $1-$2-dca.txt
   # *** protected query *** 

   spool $1-$2-sut.txt
   # *** protected query *** 

   spool $1-$2-vpt.txt
   # *** protected query *** 

   spool $1-$2-fie.txt
   # *** protected query *** 


quit
!
}


# copy functionality creates data files in source env
copy_acct(){
# export tables
sqlplus -s $DB_USER/$DB_PASS@$ORACLE_SID<<!
   set feedback off
   set verify off
   set define off
   set pagesize 0
   set heading off
   set serverout on
   set linesize 700

   spool $1-$2-am.txt
   SELECT COL1||'|'||COL2||'|'||COL3||'|' from tab1 where col2='$1';
   spool off

   spool $1-$2-seed.txt
   # *** protected query *** 
   spool off

   spool $1-$2-trd.txt
   # *** protected query *** 
   spool off

   spool $1-$2-rad.txt
   # *** protected query *** 
   spool off

   spool $1-$2-cli.txt
   # *** protected query *** 
   spool off

   spool $1-$2-fim.txt
   # *** protected query *** 
   spool off

   spool $1-$2-fid.txt
   # *** protected query *** 
   spool off

   spool $1-$2-cas.txt
   # *** protected query *** 
   spool off

   spool $1-$2-cpa.txt
   # *** protected query *** 

   spool $1-$2-cap.txt
   # *** protected query *** 

   spool $1-$2-cab.txt
   # *** protected query *** 

   spool $1-$2-cat.txt
   # *** protected query *** 

   spool $1-$2-dca.txt
   # *** protected query *** 

   spool $1-$2-sut.txt
   # *** protected query *** 

   spool $1-$2-vpt.txt
   # *** protected query *** 

   spool $1-$2-fie.txt
   # *** protected query *** 

quit
!
}


# load functionality loads and updates data into destination tables/env
load_acct(){
   echo "in load acct.."
   echo "check if $1 exists in this env.."

   EXISTS=`sqlplus -s $DB_USER/$DB_PASS@$ORACLE_SID<<!
   set feedback off
   set verify off
   set define off
   set pagesize 0
   set heading off
   set serverout on
   set linesize 700

   select count(acct_no) from account_master where acct_no='$1';
quit
!`
   if [[ "1" -eq $EXISTS ]]; then
      echo "account exists; delete and load again or use force (TBI).."
      exit 1;
   fi

   if ! [[ -f $1-am.txt ]] || [[ -f $1-$2-am.txt ]]; then
      echo "acct master file doesn't exist.. quitting.. ";
      exit 1;
   fi

   # load am
   sqlldr userid=$DB_USER/$DB_PASS@$ORACLE_SID control=$CTL_DIR/am-copy.ctl data=$1-am.txt log=$ERROR/$1-am.log bad=$ERROR/$1-am.bad

   # load seed
   sqlldr userid=$DB_USER/$DB_PASS@$ORACLE_SID control=$CTL_DIR/seed-copy.ctl data=$1-seed.txt log=$ERROR/$1-seed.log bad=$ERROR/$1-seed.bad

   # load trd
   sqlldr userid=$DB_USER/$DB_PASS@$ORACLE_SID control=$CTL_DIR/trd-copy.ctl data=$1-trd.txt log=$ERROR/$1-trd.log bad=$ERROR/$1-trd.bad

   # load rad
   sqlldr userid=$DB_USER/$DB_PASS@$ORACLE_SID control=$CTL_DIR/rad-copy.ctl data=$1-rad.txt log=$ERROR/$1-rad.log bad=$ERROR/$1-rad.bad

   # load cli
   sqlldr userid=$DB_USER/$DB_PASS@$ORACLE_SID control=$CTL_DIR/cli-copy.ctl data=$1-cli.txt log=$ERROR/$1-cli.log bad=$ERROR/$1-cli.bad

   # load fim
   sqlldr userid=$DB_USER/$DB_PASS@$ORACLE_SID control=$CTL_DIR/fim-copy.ctl data=$1-fim.txt log=$ERROR/$1-fim.log bad=$ERROR/$1-fim.bad

   # load fid
   sqlldr userid=$DB_USER/$DB_PASS@$ORACLE_SID control=$CTL_DIR/fid-copy.ctl data=$1-fid.txt log=$ERROR/$1-fid.log bad=$ERROR/$1-fid.bad

   # load cas
   sqlldr userid=$DB_USER/$DB_PASS@$ORACLE_SID control=$CTL_DIR/cas-copy.ctl data=$1-cas.txt log=$ERROR/$1-cas.log bad=$ERROR/$1-cas.bad

   # load cpa
   sqlldr userid=$DB_USER/$DB_PASS@$ORACLE_SID control=$CTL_DIR/cpa-copy.ctl data=$1-cpa.txt log=$ERROR/$1-cpa.log bad=$ERROR/$1-cpa.bad

   # load cap
   sqlldr userid=$DB_USER/$DB_PASS@$ORACLE_SID control=$CTL_DIR/cap-copy.ctl data=$1-cap.txt log=$ERROR/$1-cap.log bad=$ERROR/$1-cap.bad

   # load cab
   sqlldr userid=$DB_USER/$DB_PASS@$ORACLE_SID control=$CTL_DIR/cab-copy.ctl data=$1-cab.txt log=$ERROR/$1-cab.log bad=$ERROR/$1-cab.bad

   # load cat
   sqlldr userid=$DB_USER/$DB_PASS@$ORACLE_SID control=$CTL_DIR/cat-copy.ctl data=$1-cat.txt log=$ERROR/$1-cat.log bad=$ERROR/$1-cat.bad

   # load dca
   sqlldr userid=$DB_USER/$DB_PASS@$ORACLE_SID control=$CTL_DIR/dca-copy.ctl data=$1-dca.txt log=$ERROR/$1-dca.log bad=$ERROR/$1-dca.bad

   # load sut
   sqlldr userid=$DB_USER/$DB_PASS@$ORACLE_SID control=$CTL_DIR/sut-copy.ctl data=$1-sut.txt log=$ERROR/$1-sut.log bad=$ERROR/$1-sut.bad

   # load vpt
   sqlldr userid=$DB_USER/$DB_PASS@$ORACLE_SID control=$CTL_DIR/vpt-copy.ctl data=$1-vpt.txt log=$ERROR/$1-vpt.log bad=$ERROR/$1-vpt.bad

   # load fie
   sqlldr userid=$DB_USER/$DB_PASS@$ORACLE_SID control=$CTL_DIR/fie-copy.ctl data=$1-fie.txt log=$ERROR/$1-fie.log bad=$ERROR/$1-fie.bad


   # update acct after load
   update_acct $1
}


update_acct(){
   echo "in update_acct - val: "$1
   if [[ -s $1-cas.txt  ]]; then
      SRC_ACCT_ID=`cat $1-am.txt | cut -d'|' -f1 | cut -d'-' -f-3`
      SRC_CLIENT_ID=`cat $1-am.txt | cut -d'|' -f6`
      echo "source acct_id: "$SRC_ACCT_ID
      echo "source client_id: "$SRC_CLIENT_ID
   fi
   sqlplus -s $DB_USER/$DB_PASS@$ORACLE_SID<<!
   update tabam set bo_id='$BO_ID', sub_no='$SUB_NO', firm_no='$FIRM_NO',BROKER_ID='$CLIENT_ID',acct_id='$BO_ID-$FIRM_NO-$SUB_NO-$1' where acct_no='$1';

   update tabsd set process_status='UNDEFINED' where acct_no='$1' and process_status='PROCESSED';
   update tabsd set bo_id='$BO_ID',sub_no='$SUB_NO',firm_no='$FIRM_NO',client_id='$CLIENT_ID' where acct_no='$1';

   update tabtr set process_status='UNDEFINED' where acct_no='$1' and process_status='PROCESSED';
   update tabtr set bo_id='$BO_ID', sub_no='$SUB_NO', firm_no='$FIRM_NO',CLIENT_ID='$CLIENT_ID' where acct_no='$1';

   update tabrd set process_status='UNDEFINED' where acct_no='$1' and process_status='PROCESSED';
   update tabrd set bo_id='$BO_ID', sub_no='$SUB_NO', firm_no='$FIRM_NO',CLIENT_ID='$CLIENT_ID' where acct_no='$1';

   update tabcl set bo_id='$BO_ID', sub_no='$SUB_NO', firm_id='$FIRM_NO',CLIENT_ID='$CLIENT_ID',process_status='UNDEFINED' where acct_no='$1';

   update tabfm set process_status='UNDEFINED',acct_id='$BO_ID-$FIRM_NO-$SUB_NO-$1',security_id='$BO_ID-'||sec_no where acct_no='$1';

   update tabfd set process_status='UNDEFINED',acct_id='$BO_ID-$FIRM_NO-$SUB_NO-$1',security_id='$BO_ID-'||sec_no where acct_no='$1';

   update tabcas set account_id='$BO_ID-$FIRM_NO-$SUB_NO-$1',security_id='$BO_ID-'||substr(security_id,3) where account_id='$SRC_ACCT_ID-$1';
   update tabcas set process_status='UNDEFINED' where account_id='$BO_ID-$FIRM_NO-$SUB_NO-$1' and process_status='PROCESSED';
   commit;

   update tabcab set broker_id='$CLIENT_ID',modifieddate=sysdate,modifiedby='ACCT-COPY' where ca_id in (select ca_id from corp_act where target_cusip in (select cusip from svi_rad where acct_no='$1') and work_status='READY') and broker_id='$SRC_CLIENT_ID';
   commit;
!
}


# archive files we are done with..
archive_data(){
   if [[ ! -d "acct-copy" ]]; then
      mkdir acct-copy
   fi
   mv $1-*.txt ./acct-copy/
}


# invoke..
main $1 $2 $3


# end of script
